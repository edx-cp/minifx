# This workflow will build minicp with Maven, and cache/restore any dependencies to improve the workflow execution time
# Before building we have to make sure all test pass. Once done we then generate release our release.

name: minifx CI-CD

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  Release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: CI

    steps:
      - name: Checkout GitHub Actions
        uses: actions/checkout@v3

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "release.tar.gz,foo/*.txt"
          bodyFile: "body.md"
          token: ${{ secrets.GITHUB_TOKEN }}
#  CI:
#    runs-on: ${{matrix.os}}
#    strategy:
#      matrix:
#        os: [ubuntu-latest, macos-latest, windows-latest]
#
#    steps:
#    - name: Checkout GitHub Actions
#      uses: actions/checkout@v3
#
#    - name: Set up JDK 18
#      uses: actions/setup-java@v3
#      with:
#        java-version: '18'
#        distribution: 'temurin'
#        architecture: x64
#        cache: maven
#
#    - name: Tests
#      run: mvn test
#      #mvn --batch-mode --update-snapshots verify
#
#    - name: Build
#      run: mvn -B package --file pom.xml
#  CD:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#    needs: CI
#
#    steps:
#    - name: Checkout GitHub Actions
#      uses: actions/checkout@v3
#
#    - name: Create Release
#      uses: ncipollo/release-action@v1
#      with:
#        artifacts: "release.tar.gz,foo/*.txt"
#        bodyFile: "body.md"
#        token: ${{ secrets.GITHUB_TOKEN }}
      #${{ github.ref }}
